"use strict";var util=require("../");var fs=require("fs");var path=require("path");var Tempfile=require("temporary/lib/file");exports["util.callbackify"]={"return":function(b){b.expect(1);function a(d,c){return d+c}util.callbackify(a)(1,2,function(c){b.equal(c,3,"should be the correct result.");b.done()})},"callback (sync)":function(b){b.expect(1);function a(e,c,d){d(e+c)}util.callbackify(a)(1,2,function(c){b.equal(c,3,"should be the correct result.");b.done()})},"callback (async)":function(b){b.expect(1);function a(e,c,d){setTimeout(d.bind(null,e+c),0)}util.callbackify(a)(1,2,function(c){b.equal(c,3,"should be the correct result.");b.done()})}};exports.util={error:function(d){d.expect(9);var c=new Error("Original error.");var b=util.error("Test message.");d.ok(b instanceof Error,"Should be an Error.");d.equal(b.name,"Error","Should be an Error.");d.equal(b.message,"Test message.","Should have the correct message.");b=util.error("Test message.",c);d.ok(b instanceof Error,"Should be an Error.");d.equal(b.name,"Error","Should be an Error.");d.equal(b.message,"Test message.","Should have the correct message.");d.equal(b.origError,c,"Should reflect the original error.");var a=new Error("Test message.");b=util.error(a,c);d.equal(b,a,"Should be the passed-in Error.");d.equal(b.origError,c,"Should reflect the original error.");d.done()},linefeed:function(a){a.expect(1);if(process.platform==="win32"){a.equal(util.linefeed,"\r\n","linefeed should be operating-system appropriate.")}else{a.equal(util.linefeed,"\n","linefeed should be operating-system appropriate.")}a.done()},normalizelf:function(a){a.expect(1);if(process.platform==="win32"){a.equal(util.normalizelf("foo\nbar\r\nbaz\r\n\r\nqux\n\nquux"),"foo\r\nbar\r\nbaz\r\n\r\nqux\r\n\r\nquux","linefeeds should be normalized")}else{a.equal(util.normalizelf("foo\nbar\r\nbaz\r\n\r\nqux\n\nquux"),"foo\nbar\nbaz\n\nqux\n\nquux","linefeeds should be normalized")}a.done()}};exports["util.spawn"]={setUp:function(a){this.script=path.resolve("test/fixtures/spawn.js");a()},"exit code 0":function(a){a.expect(6);util.spawn({cmd:process.execPath,args:[this.script,0]},function(d,b,c){a.equals(d,null);a.equals(c,0);a.equals(b.stdout,"stdout");a.equals(b.stderr,"stderr");a.equals(b.code,0);a.equals(String(b),"stdout");a.done()})},"exit code 0, fallback":function(a){a.expect(6);util.spawn({cmd:process.execPath,args:[this.script,0],fallback:"ignored if exit code is 0"},function(d,b,c){a.equals(d,null);a.equals(c,0);a.equals(b.stdout,"stdout");a.equals(b.stderr,"stderr");a.equals(b.code,0);a.equals(String(b),"stdout");a.done()})},"non-zero exit code":function(a){a.expect(7);util.spawn({cmd:process.execPath,args:[this.script,123]},function(d,b,c){a.ok(d instanceof Error);a.equals(d.message,"stderr");a.equals(c,123);a.equals(b.stdout,"stdout");a.equals(b.stderr,"stderr");a.equals(b.code,123);a.equals(String(b),"stderr");a.done()})},"non-zero exit code, fallback":function(a){a.expect(6);util.spawn({cmd:process.execPath,args:[this.script,123],fallback:"custom fallback"},function(d,b,c){a.equals(d,null);a.equals(c,123);a.equals(b.stdout,"stdout");a.equals(b.stderr,"stderr");a.equals(b.code,123);a.equals(String(b),"custom fallback");a.done()})},"cmd not found":function(a){a.expect(3);util.spawn({cmd:"nodewtfmisspelled"},function(d,b,c){a.ok(d instanceof Error);a.equals(c,127);a.equals(b.code,127);a.done()})},"cmd not found, fallback":function(a){a.expect(4);util.spawn({cmd:"nodewtfmisspelled",fallback:"use a fallback or good luck"},function(d,b,c){a.equals(d,null);a.equals(c,127);a.equals(b.code,127);a.equals(String(b),"use a fallback or good luck");a.done()})},"cmd not in path":function(b){b.expect(6);var a=process.platform==="win32";util.spawn({cmd:"test\\fixtures\\exec"+(a?".cmd":".sh")},function(e,c,d){b.equals(e,null);b.equals(d,0);b.equals(c.stdout,"done");b.equals(c.stderr,"");b.equals(c.code,0);b.equals(String(c),"done");b.done()})},"cmd not in path (with cwd)":function(b){b.expect(6);var a=process.platform==="win32";util.spawn({cmd:"./exec"+(a?".cmd":".sh"),opts:{cwd:"test/fixtures"}},function(e,c,d){b.equals(e,null);b.equals(d,0);b.equals(c.stdout,"done");b.equals(c.stderr,"");b.equals(c.code,0);b.equals(String(c),"done");b.done()})},grunt:function(a){a.expect(3);util.spawn({grunt:true,args:["--gruntfile","test/fixtures/Gruntfile-print-text.js","print:foo"]},function(d,b,c){a.equals(d,null);a.equals(c,0);a.ok(/^OUTPUT: foo/m.test(b.stdout),"stdout should contain output indicating the grunt task was run.");a.done()})},"grunt (with cwd)":function(a){a.expect(3);util.spawn({grunt:true,args:["--gruntfile","Gruntfile-print-text.js","print:foo"],opts:{cwd:"test/fixtures"}},function(d,b,c){a.equals(d,null);a.equals(c,0);a.ok(/^OUTPUT: foo/m.test(b.stdout),"stdout should contain output indicating the grunt task was run.");a.done()})},"grunt passes execArgv":function(a){a.expect(3);util.spawn({cmd:process.execPath,args:["--harmony",process.argv[1],"--gruntfile","test/fixtures/Gruntfile-execArgv.js"]},function(d,b,c){a.equals(d,null);a.equals(c,0);a.ok(/^OUTPUT: --harmony/m.test(b.stdout),"stdout should contain passed-through process.execArgv.");a.done()})},"grunt result.toString() with error":function(a){a.expect(4);util.spawn({grunt:true,args:["nonexistentTask"]},function(d,b,c){a.ok(d instanceof Error,"Should be an Error.");a.equal(d.name,"Error","Should be an Error.");a.equals(c,3);a.ok(/Warning: Task "nonexistentTask" not found./m.test(b.toString()),"stdout should contain output indicating the grunt task was (attempted to be) run.");a.done()})},"custom stdio stream(s)":function(f){f.expect(6);var d=new Tempfile();var b=new Tempfile();var a=fs.openSync(d.path,"a");var c=fs.openSync(b.path,"a");var e=util.spawn({cmd:process.execPath,args:[this.script,0],opts:{stdio:[null,a,c]}},function(i,g,h){f.equals(h,0);f.equals(String(fs.readFileSync(d.path)),"stdout\n","Child process stdout should have been captured via custom stream.");f.equals(String(fs.readFileSync(b.path)),"stderr\n","Child process stderr should have been captured via custom stream.");d.unlinkSync();b.unlinkSync();f.equals(g.stdout,"","Nothing will be passed to the stdout string when spawn stdio is a custom stream.");f.done()});f.ok(!e.stdout,"child should not have a stdout property.");f.ok(!e.stderr,"child should not have a stderr property.")}};exports["util.spawn.multibyte"]={setUp:function(a){this.script=path.resolve("test/fixtures/spawn-multibyte.js");a()},"partial stdout":function(a){a.expect(4);util.spawn({cmd:process.execPath,args:[this.script]},function(d,b,c){a.equals(d,null);a.equals(c,0);a.equals(b.stdout,"こんにちは");a.equals(b.stderr,"こんにちは");a.done()})}};exports["util.underscore.string"]=function(a){a.expect(4);a.equals(util._.trim("    foo     "),"foo","Should have trimmed the string.");a.equals(util._.capitalize("foo"),"Foo","Should have capitalized the first letter.");a.equals(util._.words("one two three").length,3,"Should have counted three words.");a.ok(util._.isBlank(" "),"Should be blank.");a.done()};