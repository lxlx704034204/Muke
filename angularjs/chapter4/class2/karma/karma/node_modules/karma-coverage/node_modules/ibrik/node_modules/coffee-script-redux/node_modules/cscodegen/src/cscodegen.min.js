(function(){var a={}.hasOwnProperty,c=[].slice,b=[].indexOf||function(f){for(var e=0,d=this.length;e<d;e++){if(e in this&&this[e]===f){return e}}return -1};(function(i){var k,j,p,g,m,l,f,o,e,h,n,d;k="  ";f=function(r){var q;return((function(){var v,t,u,s;u=r.split("\n");s=[];for(v=0,t=u.length;v<t;v++){q=u[v];s.push(""+k+q)}return s})()).join("\n")};n=function(q){return"("+q+")"};m=function(q){return q.replace(/[^\x20-\x7e]|['\\]/,function(t){var r,s;switch(t){case"\0":return"\\0";case"\b":return"\\b";case"\t":return"\\t";case"\n":return"\\n";case"\f":return"\\f";case"\r":return"\\r";case"'":return"\\'";case"\\":return"\\\\";default:r=(t.charCodeAt(0)).toString(16);s="0000".slice(r.length);return"\\u"+s+r}})};g=function(q,r){var t,s;switch(q.className){case"ConcatOp":t=g(q.left,r);s=g(q.right,r);return""+t+s;case"String":return m(q.data);default:return"#{"+(l(q,r))+"}"}};e=function(q){switch(q.className){case"Function":case"BoundFunction":case"NewOp":return true;case"Conditional":case"Switch":case"While":case"Block":return true;case"PreIncrementOp":case"PreDecrementOp":case"UnaryPlusOp":case"UnaryNegateOp":case"LogicalNotOp":case"BitNotOp":case"DoOp":case"TypeofOp":case"DeleteOp":return e(q.expression);case"FunctionApplication":return q["arguments"].length>0;default:return false}};p=function(w,u){var s,y,r,x,t,q;for(y in w){if(!a.call(w,y)){continue}x=w[y];if(y==="raw"||y==="line"||y==="column"){continue}switch(Object.prototype.toString.call(x)){case"[object Object]":if(!p(u[y],x)){return false}break;case"[object Array]":for(s=t=0,q=x.length;t<q;s=++t){r=x[s];if(!p(u[y][s],r)){return false}}break;default:if(u[y]!==x){return false}}}return true};j=function(r,t){var q,u,s;if(t==null){t={}}q={};for(u in r){if(!a.call(r,u)){continue}s=r[u];q[u]=s}for(u in t){if(!a.call(t,u)){continue}s=t[u];q[u]=s}return q};o=[["SeqOp"],["Conditional","ForIn","ForOf","While"],["FunctionApplication","SoakedFunctionApplication"],["AssignOp","CompoundAssignOp","ExistsAssignOp"],["LogicalOrOp"],["LogicalAndOp"],["BitOrOp"],["BitXorOp"],["BitAndOp"],["ExistsOp"],["EQOp","NEQOp"],["LTOp","LTEOp","GTOp","GTEOp","InOp","OfOp","InstanceofOp"],["LeftShiftOp","SignedRightShiftOp","UnsignedRightShiftOp"],["PlusOp","SubtractOp"],["MultiplyOp","DivideOp","RemOp"],["UnaryPlusOp","UnaryNegateOp","LogicalNotOp","BitNotOp","DoOp","TypeofOp","PreIncrementOp","PreDecrementOp","DeleteOp"],["UnaryExistsOp","ShallowCopyArray","PostIncrementOp","PostDecrementOp","Spread"],["NewOp"],["MemberAccessOp","SoakedMemberAccessOp","DynamicMemberAccessOp","SoakedDynamicMemberAccessOp","ProtoMemberAccessOp","DynamicProtoMemberAccessOp","SoakedProtoMemberAccessOp","SoakedDynamicProtoMemberAccessOp"]];d={};(function(){var v,u,s,t,r,q;q=[];for(v=t=0,r=o.length;t<r;v=++t){s=o[v];q.push((function(){var y,w,x;x=[];for(y=0,w=s.length;y<w;y++){u=s[y];x.push(d[u]=v)}return x})())}return q})();h={SeqOp:";",LogicalOrOp:"or",LogicalAndOp:"and",BitOrOp:"|",BitXorOp:"^",BitAndOp:"&",EQOp:"is",NEQOp:"isnt",LTOp:"<",LTEOp:"<=",GTOp:">",GTEOp:">=",InOp:"in",OfOp:"of",InstanceofOp:"instanceof",LeftShiftOp:"<<",SignedRightShiftOp:">>",UnsignedRightShiftOp:">>>",PlusOp:"+",SubtractOp:"-",MultiplyOp:"*",DivideOp:"/",RemOp:"%",UnaryPlusOp:"+",UnaryNegateOp:"-",LogicalNotOp:"not ",BitNotOp:"~",DoOp:"do ",NewOp:"new ",TypeofOp:"typeof ",PreIncrementOp:"++",PreDecrementOp:"--",UnaryExistsOp:"?",ShallowCopyArray:"[..]",PostIncrementOp:"++",PostDecrementOp:"--",Spread:"...",FunctionApplication:"",SoakedFunctionApplication:"?",MemberAccessOp:".",SoakedMemberAccessOp:"?.",ProtoMemberAccessOp:"::",SoakedProtoMemberAccessOp:"?::",DynamicMemberAccessOp:"",SoakedDynamicMemberAccessOp:"?",DynamicProtoMemberAccessOp:"::",SoakedDynamicProtoMemberAccessOp:"?::"};return i.generate=l=function(q,B){var ac,r,A,Q,u,I,X,x,L,V,ab,aa,Y,S,W,v,ad,M,O,D,y,G,K,H,P,C,w,z,J,N,R,E,Z,t,F,U,T;if(B==null){B={}}Y=false;if(B.precedence==null){B.precedence=0}if(B.ancestors==null){B.ancestors=[]}v=B.ancestors[0];ad=v!=null?v.className:void 0;G=(v!=null)&&ad!=="Block";y=(function(){var ag,ae,af,s,aj,ai,ah;switch(q.className){case"Program":B.ancestors=[q].concat(c.call(B.ancestors));if(q.body!=null){return l(q.body,B)}else{return""}break;case"Block":B=j(B,{ancestors:[q].concat(c.call(B.ancestors)),precedence:0});if(q.statements.length===0){return l((new Undefined).g(),B)}else{D=ad==="Program"?"\n\n":"\n";return((function(){var an,al,am,ak;am=q.statements;ak=[];for(an=0,al=am.length;an<al;an++){O=am[an];ak.push(l(O,B))}return ak})()).join(D)}break;case"Conditional":B.ancestors.unshift(q);B.precedence=0;I=(q.consequent!=null)&&(q.alternate!=null);J=l((af=q.consequent)!=null?af:(new Undefined).g(),B);K=I?l(q.alternate,B):"";x=J.length>90||K.length>90||b.call(K,"\n")>=0||b.call(J,"\n")>=0;J=x?"\n"+(f(J)):" then "+J;if(I){K=x?"\nelse\n"+(f(K)):" else "+K}return"if "+(l(q.condition,B))+J+K;case"Identifier":return q.data;case"Null":return"null";case"This":return"this";case"Undefined":return"undefined";case"Int":r=q.data<0?-q.data:q.data;if(r>=1000000000000||(r>=16&&0===(r&(r-1)))){return"0x"+(q.data.toString(16))}else{return q.data.toString(10)}break;case"Float":return q.data.toString(10);case"String":return"'"+(m(q.data))+"'";case"ArrayInitialiser":B=j(B,{ancestors:[q].concat(c.call(B.ancestors)),precedence:d.AssignmentExpression});aa=(function(){var an,am,ak,al;ak=q.members;al=[];for(an=0,am=ak.length;an<am;an++){V=ak[an];al.push(l(V,B))}return al})();switch(q.members.length){case 0:return"[]";case 1:case 2:for(X=ag=0,ae=aa.length;ag<ae;X=++ag){V=aa[X];if(X+1!==aa.length){if(e(q.members[X])){aa[X]=n(V)}}}return"["+(aa.join(", "))+"]";default:return"[\n"+(f(aa.join("\n")))+"\n]"}break;case"ObjectInitialiser":B.ancestors=[q].concat(c.call(B.ancestors));aa=(function(){var an,am,ak,al;ak=q.members;al=[];for(an=0,am=ak.length;an<am;an++){V=ak[an];al.push(l(V,B))}return al})();switch(q.members.length){case 0:return"{}";case 1:return"{"+(aa.join(", "))+"}";default:return"{\n"+(f(aa.join("\n")))+"\n}"}break;case"ObjectInitialiserMember":B=j(B,{ancestors:[q].concat(c.call(B.ancestors)),precedence:d.AssignmentExpression});L=l(q.key,B);u=l(q.expression,B);ab=["MemberAccessOp","ProtoMemberAccessOp","SoakedMemberAccessOp","SoakedProtoMemberAccessOp"];if(p(q.key,q.expression)){return""+L}else{if((s=q.expression.className,b.call(ab,s)>=0)&&q.key.data===q.expression.memberName){return""+u}else{return""+L+": "+u}}break;case"Function":case"BoundFunction":B=j(B,{ancestors:[q].concat(c.call(B.ancestors)),precedence:d.AssignmentExpression});W=(function(){var am,al,an,ak;an=q.parameters;ak=[];for(am=0,al=an.length;am<al;am++){S=an[am];ak.push(l(S,B))}return ak})();B.precedence=0;z=(q.body==null)||q.body.className==="Undefined"?"":l(q.body,B);U=q.parameters.length>0?"("+(W.join(", "))+") ":"";w=z.length===0?"":U.length+z.length<100&&b.call(z,"\n")<0?" "+z:"\n"+(f(z));switch(q.className){case"Function":return""+U+"->"+w;case"BoundFunction":return""+U+"=>"+w}break;case"AssignOp":M=d[q.className];Y=M<B.precedence;B=j(B,{ancestors:[q].concat(c.call(B.ancestors)),precedence:M});C=l(q.assignee,B);R=l(q.expression,B);return""+C+" = "+R;case"CompoundAssignOp":M=d[q.className];Y=M<B.precedence;B=j(B,{ancestors:[q].concat(c.call(B.ancestors)),precedence:M});F=h[q.op.prototype.className];C=l(q.assignee,B);R=l(q.expression,B);return""+C+" "+F+"= "+R;case"SeqOp":M=d[q.className];Y=M<B.precedence;B=j(B,{ancestors:[q].concat(c.call(B.ancestors)),precedence:M});t=l(q.left,B);T=l(q.right,B);return""+t+"; "+T;case"LogicalOrOp":case"LogicalAndOp":case"BitOrOp":case"BitXorOp":case"BitAndOp":case"LeftShiftOp":case"SignedRightShiftOp":case"UnsignedRightShiftOp":case"EQOp":case"NEQOp":case"LTOp":case"LTEOp":case"GTOp":case"GTEOp":case"InOp":case"OfOp":case"InstanceofOp":case"PlusOp":case"SubtractOp":case"MultiplyOp":case"DivideOp":case"RemOp":case"ExistsOp":F=h[q.className];if(((aj=q.className)==="InOp"||aj==="OfOp"||aj==="InstanceofOp")&&ad==="LogicalNotOp"){F="not "+F}M=d[q.className];Y=M<B.precedence;B=j(B,{ancestors:[q].concat(c.call(B.ancestors)),precedence:M});t=l(q.left,B);if(e(q.left)){t=n(t)}T=l(q.right,B);return""+t+" "+F+" "+T;case"UnaryPlusOp":case"UnaryNegateOp":case"LogicalNotOp":case"BitNotOp":case"DoOp":case"TypeofOp":case"PreIncrementOp":case"PreDecrementOp":F=h[q.className];M=d[q.className];if(q.className==="LogicalNotOp"){if((ai=q.expression.className)==="InOp"||ai==="OfOp"||ai==="InstanceofOp"){F="";M=d[q.expression.className]}if("LogicalNotOp"===ad||"LogicalNotOp"===q.expression.className){F="!"}}Y=M<B.precedence;if(ad===q.className&&((ah=q.className)==="UnaryPlusOp"||ah==="UnaryNegateOp")){Y=true}B=j(B,{ancestors:[q].concat(c.call(B.ancestors)),precedence:M});return""+F+(l(q.expression,B));case"UnaryExistsOp":case"PostIncrementOp":case"PostDecrementOp":case"Spread":F=h[q.className];M=d[q.className];Y=M<B.precedence;B=j(B,{ancestors:[q].concat(c.call(B.ancestors)),precedence:M});R=l(q.expression,B);if(e(q.expression)){R=n(R)}return""+R+F;case"NewOp":F=h[q.className];M=d[q.className];B=j(B,{ancestors:[q].concat(c.call(B.ancestors)),precedence:M});N=l(q.ctor,B);if(q["arguments"].length>0&&e(q.ctor)){N=n(N)}B.precedence=d.AssignOp;Q=(function(){var am,al,an,ak;an=q["arguments"];ak=[];for(X=am=0,al=an.length;am<al;X=++am){ac=an[X];A=l(ac,B);if((e(ac))&&X+1!==q["arguments"].length){A=n(A)}ak.push(A)}return ak})();P=q["arguments"].length===0?"":" "+(Q.join(", "));return""+F+N+P;case"FunctionApplication":case"SoakedFunctionApplication":if(q.className==="FunctionApplication"&&q["arguments"].length===0&&!G){return l(new DoOp(q["function"]),B)}else{B=j(B,{ancestors:[q].concat(c.call(B.ancestors)),precedence:d[q.className]});F=h[q.className];E=l(q["function"],B);if(e(q["function"])){E=n(E)}Q=(function(){var am,al,an,ak;an=q["arguments"];ak=[];for(X=am=0,al=an.length;am<al;X=++am){ac=an[X];A=l(ac,B);if((e(ac))&&X+1!==q["arguments"].length){A=n(A)}ak.push(A)}return ak})();H=q["arguments"].length===0?"()":" "+(Q.join(", "));return""+E+F+H}break;case"MemberAccessOp":case"SoakedMemberAccessOp":case"ProtoMemberAccessOp":case"SoakedProtoMemberAccessOp":F=h[q.className];M=d[q.className];Y=M<B.precedence;B=j(B,{ancestors:[q].concat(c.call(B.ancestors)),precedence:M});if(q.expression.className==="This"){R="@";if(q.className==="MemberAccessOp"){F=""}}else{R=l(q.expression,B);if(e(q.expression)){R=n(R)}}return""+R+F+q.memberName;case"DynamicMemberAccessOp":case"SoakedDynamicMemberAccessOp":case"DynamicProtoMemberAccessOp":case"SoakedDynamicProtoMemberAccessOp":F=h[q.className];M=d[q.className];Y=M<B.precedence;B=j(B,{ancestors:[q].concat(c.call(B.ancestors)),precedence:M});if(q.expression.className==="This"){R="@"}else{R=l(q.expression,B);if(e(q.expression)){R=n(R)}}B.precedence=0;Z=l(q.indexingExpr,B);return""+R+F+"["+Z+"]";case"ConcatOp":t=g(q.left,B);T=g(q.right,B);return'"'+t+T+'"';default:throw new Error("Non-exhaustive patterns in case: "+q.className)}})();if(Y){return n(y)}else{return y}}})(typeof exports!=="undefined"&&exports!==null?exports:this.cscodegen={})}).call(this);