(function() {
  var arrayEgal, egal, func, inspect, libDir, name, util, _ref;

  util = require('util');

  inspect = function(o) {
    return util.inspect(o, false, 2, true);
  };

  _ref = require('assert');
  for (name in _ref) {
    func = _ref[name];
    global[name] = func;
  }

  libDir = typeof _$jscoverage === 'undefined' ? 'lib' : 'instrumented';

  global.generate = require("../" + libDir + "/cscodegen").generate;

  global.CS = require('CoffeeScriptRedux/lib/coffee-script/nodes');

  egal = function(a, b) {
    if (a === b) {
      return a !== 0 || 1 / a === 1 / b;
    } else {
      return a !== a && b !== b;
    }
  };

  arrayEgal = function(a, b) {
    var el, idx, _i, _len;
    if (egal(a, b)) {
      return true;
    } else if (a instanceof Array && b instanceof Array) {
      if (a.length !== b.length) {
        return false;
      }
      for (idx = _i = 0, _len = a.length; _i < _len; idx = ++_i) {
        el = a[idx];
        if (!arrayEgal(el, b[idx])) {
          return false;
        }
      }
      return true;
    }
  };

  global.eq = function(a, b, msg) {
    return ok(egal(a, b), msg != null ? msg : "" + (inspect(a)) + " === " + (inspect(b)));
  };

  global.arrayEq = function(a, b, msg) {
    return ok(arrayEgal(a, b), msg != null ? msg : "" + (inspect(a)) + " === " + (inspect(b)));
  };

}).call(this);
