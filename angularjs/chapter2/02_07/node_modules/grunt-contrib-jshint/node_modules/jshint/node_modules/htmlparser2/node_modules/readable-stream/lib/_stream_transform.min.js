module.exports=Transform;var Duplex=require("./_stream_duplex");var util=require("core-util-is");util.inherits=require("inherits");util.inherits(Transform,Duplex);function TransformState(a,b){this.afterTransform=function(d,c){return afterTransform(b,d,c)};this.needTransform=false;this.transforming=false;this.writecb=null;this.writechunk=null}function afterTransform(e,f,d){var c=e._transformState;c.transforming=false;var a=c.writecb;if(!a){return e.emit("error",new Error("no writecb in Transform class"))}c.writechunk=null;c.writecb=null;if(d!==null&&d!==undefined){e.push(d)}if(a){a(f)}var b=e._readableState;b.reading=false;if(b.needReadable||b.length<b.highWaterMark){e._read(b.highWaterMark)}}function Transform(a){if(!(this instanceof Transform)){return new Transform(a)}Duplex.call(this,a);var b=this._transformState=new TransformState(a,this);var c=this;this._readableState.needReadable=true;this._readableState.sync=false;this.once("finish",function(){if("function"===typeof this._flush){this._flush(function(d){done(c,d)})}else{done(c)}})}Transform.prototype.push=function(a,b){this._transformState.needTransform=false;return Duplex.prototype.push.call(this,a,b)};Transform.prototype._transform=function(b,c,a){throw new Error("not implemented")};Transform.prototype._write=function(c,e,a){var d=this._transformState;d.writecb=a;d.writechunk=c;d.writeencoding=e;if(!d.transforming){var b=this._readableState;if(d.needTransform||b.needReadable||b.length<b.highWaterMark){this._read(b.highWaterMark)}}};Transform.prototype._read=function(b){var a=this._transformState;if(a.writechunk!==null&&a.writecb&&!a.transforming){a.transforming=true;this._transform(a.writechunk,a.writeencoding,a.afterTransform)}else{a.needTransform=true}};function done(d,e){if(e){return d.emit("error",e)}var a=d._writableState;var b=d._readableState;var c=d._transformState;if(a.length){throw new Error("calling transform done when ws.length != 0")}if(c.transforming){throw new Error("calling transform done when still transforming")}return d.push(null)};